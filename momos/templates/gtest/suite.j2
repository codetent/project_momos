#include <gtest/gtest.h>

#include "momos/io.hpp"
#include "momos/macros.hpp"

class StateTest : public ::testing::Test
{
protected:
    void SetUp() override
    {
        io::in.reset();
        io::out.reset();

        HOOK_RUN(init);
    }

    void TearDown() override
    {
        HOOK_RUN(deinit);
    }
};

{% for case in suite.cases %}
TEST_F(StateTest, {{ case.id }})
{
    {% for step in case.steps %}
    {% set from_state = step.transition.from_state %}
    {% set to_state = step.transition.to_state %}

    // [Step {{ loop.index }}]: {{ step.description }} ----------
    ASSERT_EQ(STATE_GET(), {{ from_state.id }});

    TRANSITION_RUN({{ from_state.id }}, {{ to_state.id }}, NULL);
    HOOK_RUN(update);

    {% if step.mode.fails %}
    ASSERT_NE(STATE_GET(), {{ to_state.id }});
    {% else %}
    ASSERT_EQ(STATE_GET(), {{ to_state.id }});
    {% endif %}

    {% endfor %}
}

{% endfor %}
