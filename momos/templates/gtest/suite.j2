#include <gtest/gtest.h>

#include "momos/io.hpp"
#include "momos/macros.hpp"

{% for include in includes %}
#include "{{ include }}"
{% endfor %}


class StateTest : public ::testing::Test
{
protected:
    void SetUp() override
    {
        io::in.reset();
        io::out.reset();

        HOOK_RUN(init);
        HOOK_RUN(update);
    }

    void TearDown() override
    {
        HOOK_RUN(deinit);
    }
};

{% for case in suite.cases %}
TEST_F(StateTest, {{ case.id }})
{
    {% for step in case.steps %}
    {% set from_state = step.transition.from_state %}
    {% set to_state = step.transition.to_state %}
    {% set step_index = loop.index %}

    // [Step {{ step_index }}]: {{ step.description }} ----------
    ASSERT_EQ(STATE_GET(), {{ from_state.id }});

    {% for action in step.actions %}
    {% set arg_name = 'arg_' ~ step_index ~ '_' ~ loop.index %}
    double {{ arg_name }} = {{ action | default('0', true) }};
    TRANSITION_RUN({{ from_state.id }}, {{ to_state.id }}, &{{ arg_name }});
    HOOK_RUN(update);
    {% endfor %}

    {% if step.mode.fails %}
    ASSERT_NE(STATE_GET(), {{ to_state.id }});
    {% else %}
    ASSERT_EQ(STATE_GET(), {{ to_state.id }});
    {% endif %}

    {% endfor %}
}

{% endfor %}
